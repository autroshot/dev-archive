---
import Draft from '@components/markdown/draft.astro';
import Reference from '@components/markdown/reference.astro';
import Source from '@components/markdown/source.astro';
import TagList from '@components/tag-list.astro';
import type { CollectionEntry } from 'astro:content';
import FormattedDate from '../components/formatted-date.astro';
import BaseLayout from './base/index.astro';

interface Props {
  postData: CollectionEntry<'blog'>['data'];
  convertedSeries?: {
    title: string;
    postLinks: Array<PostLink>;
  };
}
interface PostLink {
  href: string;
  text: string;
}

const { postData } = Astro.props;
---

<BaseLayout title={postData.title} description={postData.description}>
  <article class="prose prose-sm max-w-none lg:prose-base">
    <div class="not-prose mb-10 text-center">
      <h1 class="mb-4 font-noto-sans-kr text-4xl font-bold lg:text-5xl">
        {postData.title}
      </h1>
      <div class="text-center">
        {
          postData.tags ? (
            <TagList texts={postData.tags} class="justify-center" />
          ) : null
        }
      </div>
      <div class="mb-2 mt-2 text-gray-500">
        <FormattedDate date={postData.publishedDate} />
        {
          postData.updatedDate && (
            <div class="italic">
              Last updated on <FormattedDate date={postData.updatedDate} />
            </div>
          )
        }
      </div>
      <hr />
    </div>
    {postData.isDraft ? <Draft /> : null}
    {
      postData.source ? (
        <Source name={postData.source.name} url={postData.source.url} />
      ) : null
    }
    <p>{postData.description}</p>
    <slot />
    {
      postData.references && postData.references.length !== 0 ? (
        <Reference references={postData.references} />
      ) : null
    }
  </article>
</BaseLayout>
